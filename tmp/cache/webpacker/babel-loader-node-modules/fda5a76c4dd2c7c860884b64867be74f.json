{"ast":null,"code":"var _jsxFileName = \"/home/suwoon/CVWO-Assignment/app/javascript/components/Main.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\"; // import PropTypes from \"prop-types\"\n// import TodosContainer from \"./TodosContainer\"\n// import AllTodos from \"./AllTodos\";\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"super(props) this.state = \", todos = [], \";\");\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(Main, [{\n    key: \"getTodos\",\n    value: function getTodos() {\n      React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"fetch('api/v1/todos') .then(response => response.json()) .then((todo) => this.setState(\", todos, \"));\");\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"this.getTodos()\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Write task below:\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"taskInput\",\n        type: \"text\",\n        placeholder: \"Add a task\",\n        maxLength: \"50\",\n        onKeyPress: this.createTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"listWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"taskList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.state.todos.map(function (todo) {\n        return React.createElement(\"li\", {\n          className: \"task\",\n          todo: todo,\n          key: todo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"taskCheckbox\",\n          type: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"taskLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, todo.title), React.createElement(\"span\", {\n          className: \"deleteTaskBtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"x\"));\n      })))));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["/home/suwoon/CVWO-Assignment/app/javascript/components/Main.js"],"names":["React","Main","props","todos","createTodo","state","map","todo","id","title","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAGEC,KAAK,GAAG,EAHV;AADiB;AAOlB;;;;+BAEU;AACT,0BAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAGgCA,KAHhC;AAKD;;;wCAEmB;AAClB,0BAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGD;;;6BAEQ;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AACE,QAAA,WAAW,EAAC,YADd;AAC2B,QAAA,SAAS,EAAC,IADrC;AAEE,QAAA,UAAU,EAAE,KAAKC,UAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKC,KAAL,CAAWF,KAAX,CAAiBG,GAAjB,CAAqB,UAACC,IAAD,EAAU;AAC9B,eACE;AAAI,UAAA,SAAS,EAAC,MAAd;AAAqB,UAAA,IAAI,EAAEA,IAA3B;AAAiC,UAAA,GAAG,EAAEA,IAAI,CAACC,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,cAAjB;AAAgC,UAAA,IAAI,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAO,UAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BD,IAAI,CAACE,KAAnC,CAFF,EAGE;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOC,OARF,CADD,CADF,CANF,CAFF,CADF;AAyBD;;;;EAlDgBT,KAAK,CAACU,S;;AAqDzB,eAAeT,IAAf","sourcesContent":["import React from \"react\"\n// import PropTypes from \"prop-types\"\n// import TodosContainer from \"./TodosContainer\"\n// import AllTodos from \"./AllTodos\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    <React.Fragment>\n    super(props)\n    this.state = {\n      todos = []\n    };\n    </React.Fragment>\n  }\n\n  getTodos() {\n    <React.Fragment>\n    fetch('api/v1/todos')\n    .then(response => response.json())\n    .then((todo) => this.setState({ todos }));\n    </React.Fragment>\n  }\n\n  componentDidMount() {\n    <React.Fragment>\n    this.getTodos()\n    </React.Fragment>\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <label>Write task below:</label>\n        <div>\n          <div className=\"inputContainer\">\n            <input className=\"taskInput\" type=\"text\" \n              placeholder=\"Add a task\" maxLength=\"50\" \n              onKeyPress={this.createTodo} />\n          </div>  \t    \n          <div className=\"listWrapper\">\n            <ul className=\"taskList\">\n            {this.state.todos.map((todo) => {\n              return(\n                <li className=\"task\" todo={todo} key={todo.id}>\n                  <input className=\"taskCheckbox\" type=\"checkbox\" />              \n                  <label className=\"taskLabel\">{todo.title}</label>\n                  <span className=\"deleteTaskBtn\">x</span>\n                </li>\n                )       \n              })} \t \n            </ul>\n          </div>\n        </div>    \n      </React.Fragment>\n    );\n  }\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}